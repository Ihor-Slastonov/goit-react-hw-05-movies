{"version":3,"file":"static/js/742.1f0d0906.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 8px;\n  background: none;\n  cursor: pointer;\n  transition: box-shadow 250ms linear;\n  :hover {\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.6);\n  }\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  max-width: 100px;\n  max-height: 50px;\n  border: 1px solid black;\n  border-radius: 10px;\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  transition: color 250ms linear, border 250ms linear;\n\n  &.active {\n    background-color: orangered;\n    color: white;\n    border: 1px solid orangered;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.6);\n  }\n  :hover:not(.active) {\n    color: orangered;\n    border: 1px solid orangered;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 600px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { CardWrapper, CardInfo } from './MovieCard.styled';\n\nexport const MovieCard = ({ poster, title, year, vote, overview, genres }) => {\n  return (\n    <CardWrapper>\n      <img src={poster} alt={title} width=\"200\" />\n      <CardInfo>\n        <h2>\n          {title} ({year})\n        </h2>\n        <p>User Score: {vote}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </CardInfo>\n    </CardWrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.string.isRequired,\n};\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  InfoTitle,\n  InfoLink,\n  LinkWrapper,\n  BackBtn,\n} from './MovieDetails.styled';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchMovieDetails } from 'services/movieApi';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({\n    backdrop_path: '',\n    genres: [],\n    overview: '',\n    poster_path: '',\n    release_date: '',\n    title: '',\n    vote_average: '',\n  });\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieDetailsCard() {\n      try {\n        const movieDetails = await fetchMovieDetails(movieId);\n        if (Object.keys(movieDetails).length === 0) {\n          return toast('Sorry, movie not found! Please try again later');\n        }\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchMovieDetailsCard();\n  }, [movieId]);\n\n  // ------ Go back button-------///\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const navigate = useNavigate();\n  const onGoBack = () => navigate(backLink);\n  // --------------------------////\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://via.placeholder.com/200x300?text=Poster+Not+Found';\n  const year = release_date.slice(0, 4);\n  const vote = Math.floor(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <>\n      <main>\n        <BackBtn type=\"button\" onClick={onGoBack}>\n          Back to\n        </BackBtn>\n        {movieDetails && (\n          <MovieCard\n            title={title}\n            year={year}\n            poster={poster}\n            vote={vote}\n            overview={overview}\n            genres={movieGenres}\n          />\n        )}\n\n        <InfoTitle>Additional information</InfoTitle>\n        <LinkWrapper>\n          <InfoLink to=\"cast\">Cast</InfoLink>\n          <InfoLink to=\"reviews\">Reviews</InfoLink>\n        </LinkWrapper>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f44dbe234f7609a16da7327d83f3eb3';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["BackBtn","styled","InfoTitle","LinkWrapper","InfoLink","NavLink","CardWrapper","CardInfo","MovieCard","poster","title","year","vote","overview","genres","src","alt","width","MovieDetails","useState","backdrop_path","poster_path","release_date","vote_average","movieDetails","setMovieDetails","loader","setLoader","movieId","useParams","useEffect","fetchMovieDetails","Object","keys","length","toast","console","log","fetchMovieDetailsCard","backLink","useLocation","state","from","navigate","useNavigate","slice","Math","floor","movieGenres","map","genre","name","join","type","onClick","to","Suspense","fallback","Loader","BASE_URL","API_KEY","fetchTrendMovies","axios","params","api_key","language","response","data","results","id","fetchMovieCredits","cast","fetchMovieReviews","fetchSearchMovie","query"],"sourceRoot":""}