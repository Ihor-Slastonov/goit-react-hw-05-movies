{"version":3,"file":"static/js/141.2f18f844.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  justify-content: center;\n  gap: 20px;\n  padding: 20px 0;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  transition: box-shadow 250ms ease-in-out, border 250ms ease-in-out,transform 250ms ease-in-out ;\n  :hover{\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.6);\n    border: 1px solid orangered;\n    transform: scale(1.02)\n  }\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, CardWrapper, MovieName } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://via.placeholder.com/278x417?text=Poster+Not+Found'\n              }\n              alt={movie.title}\n              width=\"280\"\n            />\n            <MovieName>{movie.title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border: 2px solid orangered;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SearchBtn, SearchForm, SearchInput } from './SearchBox.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport { toast } from 'react-hot-toast';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.toLowerCase().trim();\n    if (searchQuery === '') {\n      return toast.error(\"It cannot be empty query! Example: 'Batman'!\");\n    }\n    onSubmit(searchQuery);\n    setQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={onFormSubmit}>\n      <SearchBtn type=\"submit\">\n        <BsSearch size={22} />\n      </SearchBtn>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n    </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MovieList/MovieList';\n\nimport { fetchSearchMovie } from 'services/movieApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-hot-toast';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    async function fechMovies() {\n      try {\n        const movies = await fetchSearchMovie(searchQuery);\n        if (movies.length === 0) {\n          return toast.error('Movie Not Found');\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    setLoader(true)\n    fechMovies();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <main>\n        <SearchBox onSubmit={updateQueryString} />\n        {movies && <MoviesList movies={movies} />}\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f44dbe234f7609a16da7327d83f3eb3';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["List","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","width","SearchForm","SearchBtn","SearchInput","SearchBox","onSubmit","useState","query","setQuery","e","preventDefault","searchQuery","toLowerCase","trim","toast","type","size","autoComplete","autoFocus","placeholder","value","onChange","target","Movies","setMovies","loader","setLoader","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","length","console","log","fechMovies","Loader","BASE_URL","API_KEY","fetchTrendMovies","axios","params","api_key","language","response","data","results","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}